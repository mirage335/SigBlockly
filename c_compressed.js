// Do not edit this file; automatically generated by build.py.
'use strict';


Blockly.c=new Blockly.Generator("c");Blockly.c.addReservedWords("False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,print,raise,return,try,while,with,yield,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,ArithmeticError,AssertionError,AttributeError,BaseException,BlockingIOError,BrokenPipeError,BufferError,BytesWarning,ChildProcessError,ConnectionAbortedError,ConnectionError,ConnectionRefusedError,ConnectionResetError,DeprecationWarning,EOFError,Ellipsis,EnvironmentError,Exception,FileExistsError,FileNotFoundError,FloatingPointError,FutureWarning,GeneratorExit,IOError,ImportError,ImportWarning,IndentationError,IndexError,InterruptedError,IsADirectoryError,KeyError,KeyboardInterrupt,LookupError,MemoryError,ModuleNotFoundError,NameError,NotADirectoryError,NotImplemented,NotImplementedError,OSError,OverflowError,PendingDeprecationWarning,PermissionError,ProcessLookupError,RecursionError,ReferenceError,ResourceWarning,RuntimeError,RuntimeWarning,StandardError,StopAsyncIteration,StopIteration,SyntaxError,SyntaxWarning,SystemError,SystemExit,TabError,TimeoutError,TypeError,UnboundLocalError,UnicodeDecodeError,UnicodeEncodeError,UnicodeError,UnicodeTranslateError,UnicodeWarning,UserWarning,ValueError,Warning,ZeroDivisionError,_,__build_class__,__debug__,__doc__,__import__,__loader__,__name__,__package__,__spec__,abs,all,any,apply,ascii,basestring,bin,bool,buffer,bytearray,bytes,callable,chr,classmethod,cmp,coerce,compile,complex,copyright,credits,delattr,dict,dir,divmod,enumerate,eval,exec,execfile,exit,file,filter,float,format,frozenset,getattr,globals,hasattr,hash,help,hex,id,input,int,intern,isinstance,issubclass,iter,len,license,list,locals,long,map,max,memoryview,min,next,object,oct,open,ord,pow,print,property,quit,range,raw_input,reduce,reload,repr,reversed,round,set,setattr,slice,sorted,staticmethod,str,sum,super,tuple,type,unichr,unicode,vars,xrange,zip");
Blockly.c.ORDER_ATOMIC=0;Blockly.c.ORDER_COLLECTION=1;Blockly.c.ORDER_STRING_CONVERSION=1;Blockly.c.ORDER_MEMBER=2.1;Blockly.c.ORDER_FUNCTION_CALL=2.2;Blockly.c.ORDER_EXPONENTIATION=3;Blockly.c.ORDER_UNARY_SIGN=4;Blockly.c.ORDER_BITWISE_NOT=4;Blockly.c.ORDER_MULTIPLICATIVE=5;Blockly.c.ORDER_ADDITIVE=6;Blockly.c.ORDER_BITWISE_SHIFT=7;Blockly.c.ORDER_BITWISE_AND=8;Blockly.c.ORDER_BITWISE_XOR=9;Blockly.c.ORDER_BITWISE_OR=10;Blockly.c.ORDER_RELATIONAL=11;Blockly.c.ORDER_LOGICAL_NOT=12;
Blockly.c.ORDER_LOGICAL_AND=13;Blockly.c.ORDER_LOGICAL_OR=14;Blockly.c.ORDER_CONDITIONAL=15;Blockly.c.ORDER_LAMBDA=16;Blockly.c.ORDER_NONE=99;
Blockly.c.ORDER_OVERRIDES=[[Blockly.c.ORDER_FUNCTION_CALL,Blockly.c.ORDER_MEMBER],[Blockly.c.ORDER_FUNCTION_CALL,Blockly.c.ORDER_FUNCTION_CALL],[Blockly.c.ORDER_MEMBER,Blockly.c.ORDER_MEMBER],[Blockly.c.ORDER_MEMBER,Blockly.c.ORDER_FUNCTION_CALL],[Blockly.c.ORDER_LOGICAL_NOT,Blockly.c.ORDER_LOGICAL_NOT],[Blockly.c.ORDER_LOGICAL_AND,Blockly.c.ORDER_LOGICAL_AND],[Blockly.c.ORDER_LOGICAL_OR,Blockly.c.ORDER_LOGICAL_OR]];
Blockly.c.init=function(a){Blockly.c.PASS=this.INDENT+";\n";Blockly.c.definitions_=Object.create(null);Blockly.c.functionNames_=Object.create(null);Blockly.c.variableDB_?Blockly.c.variableDB_.reset():Blockly.c.variableDB_=new Blockly.Names(Blockly.c.RESERVED_WORDS_);Blockly.c.variableDB_.setVariableMap(a.getVariableMap());for(var b=[],c=Blockly.Variables.allDeveloperVariables(a),d=0;d<c.length;d++)b.push(Blockly.c.variableDB_.getName(c[d],Blockly.Names.DEVELOPER_VARIABLE_TYPE)+" = None");a=Blockly.Variables.allUsedVarModels(a);
for(d=0;d<a.length;d++)b.push(Blockly.c.variableDB_.getName(a[d].getId(),Blockly.Variables.NAME_TYPE)+" = None");Blockly.c.definitions_.variables=b.join("\n")};
Blockly.c.finish=function(a){var b=[],c=[],d;for(d in Blockly.c.definitions_){var e=Blockly.c.definitions_[d];e.match(/^(from\s+\S+\s+)?import\s+\S+/)?b.push(e):c.push(e)}delete Blockly.c.definitions_;delete Blockly.c.functionNames_;Blockly.c.variableDB_.reset();return(b.join("\n")+"\n\n"+c.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};Blockly.c.scrubNakedValue=function(a){return a+"\n"};
Blockly.c.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/%/g,"\\%");var b="'";-1!==a.indexOf("'")&&(-1===a.indexOf('"')?b='"':a=a.replace(/'/g,"\\'"));return b+a+b};
Blockly.c.scrub_=function(a,b){var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();(d=Blockly.utils.wrap(d,Blockly.c.COMMENT_WRAP-3))&&(c=a.getProcedureDef?c+('"""'+d+'\n"""\n'):c+Blockly.c.prefixLines(d+"\n","# "));for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=Blockly.c.allNestedComments(d))&&(c+=Blockly.c.prefixLines(d,"# "))}e=a.nextConnection&&a.nextConnection.targetBlock();
e=Blockly.c.blockToCode(e);return c+b+e};Blockly.c.getAdjustedInt=function(a,b,c,d){c=c||0;a.workspace.options.oneBasedIndex&&c--;var e=a.workspace.options.oneBasedIndex?"1":"0";a=Blockly.c.valueToCode(a,b,c?Blockly.c.ORDER_ADDITIVE:Blockly.c.ORDER_NONE)||e;Blockly.isNumber(a)?(a=parseInt(a,10)+c,d&&(a=-a)):(a=0<c?"int("+a+" + "+c+")":0>c?"int("+a+" - "+-c+")":"int("+a+")",d&&(a="-"+a));return a};Blockly.c.arbitrary={};Blockly.JavaScript.arbitrary_code=function(a){return a.getFieldValue("arbitraryCode")+"\n"};Blockly.c.colour={};Blockly.c.colour_picker=function(a){return["'"+a.getFieldValue("COLOUR")+"'",Blockly.c.ORDER_ATOMIC]};Blockly.c.colour_random=function(a){Blockly.c.definitions_.import_random="import random";return["'#%06x' % random.randint(0, 2**24 - 1)",Blockly.c.ORDER_FUNCTION_CALL]};
Blockly.c.colour_rgb=function(a){var b=Blockly.c.provideFunction_("colour_rgb",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b):","  r = round(min(100, max(0, r)) * 2.55)","  g = round(min(100, max(0, g)) * 2.55)","  b = round(min(100, max(0, b)) * 2.55)","  return '#%02x%02x%02x' % (r, g, b)"]),c=Blockly.c.valueToCode(a,"RED",Blockly.c.ORDER_NONE)||0,d=Blockly.c.valueToCode(a,"GREEN",Blockly.c.ORDER_NONE)||0;a=Blockly.c.valueToCode(a,"BLUE",Blockly.c.ORDER_NONE)||0;return[b+"("+c+", "+d+", "+
a+")",Blockly.c.ORDER_FUNCTION_CALL]};
Blockly.c.colour_blend=function(a){var b=Blockly.c.provideFunction_("colour_blend",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):","  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)","  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)","  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)","  ratio = min(1, max(0, ratio))","  r = round(r1 * (1 - ratio) + r2 * ratio)","  g = round(g1 * (1 - ratio) + g2 * ratio)","  b = round(b1 * (1 - ratio) + b2 * ratio)","  return '#%02x%02x%02x' % (r, g, b)"]),
c=Blockly.c.valueToCode(a,"COLOUR1",Blockly.c.ORDER_NONE)||"'#000000'",d=Blockly.c.valueToCode(a,"COLOUR2",Blockly.c.ORDER_NONE)||"'#000000'";a=Blockly.c.valueToCode(a,"RATIO",Blockly.c.ORDER_NONE)||0;return[b+"("+c+", "+d+", "+a+")",Blockly.c.ORDER_FUNCTION_CALL]};Blockly.c.lists={};Blockly.c.lists_create_empty=function(a){return["{}",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_create_with=function(a){for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++)b[c]=Blockly.c.valueToCode(a,"ADD"+c,Blockly.c.ORDER_NONE)||"None";return["{"+b.join(", ")+"}",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_repeat=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_length=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};
Blockly.c.lists_isEmpty=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_indexOf=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_getIndex=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_setIndex=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_getSublist=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_sort=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};
Blockly.c.lists_split=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};Blockly.c.lists_reverse=function(a){return["garbage",Blockly.c.ORDER_ATOMIC]};Blockly.c.logic={};Blockly.c.controls_if=function(a){var b=0,c="";do{var d=Blockly.c.valueToCode(a,"IF"+b,Blockly.c.ORDER_NONE)||"false";var e=Blockly.c.statementToCode(a,"DO"+b)||Blockly.c.PASS;c+=(0==b?"if (":"elif (")+d+") {\n"+e+"}\n";++b}while(a.getInput("IF"+b));a.getInput("ELSE")&&(e=Blockly.c.statementToCode(a,"ELSE")||Blockly.c.PASS,c+="else {\n"+e+"}\n");return c};Blockly.c.controls_ifelse=Blockly.c.controls_if;
Blockly.c.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c=Blockly.c.ORDER_RELATIONAL,d=Blockly.c.valueToCode(a,"A",c)||"0";a=Blockly.c.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};
Blockly.c.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"&&":"||",c="and"==b?Blockly.c.ORDER_LOGICAL_AND:Blockly.c.ORDER_LOGICAL_OR,d=Blockly.c.valueToCode(a,"A",c);a=Blockly.c.valueToCode(a,"B",c);if(d||a){var e="&&"==b?"true":"false";d||(d=e);a||(a=e)}else a=d="false";return[d+" "+b+" "+a,c]};Blockly.c.logic_negate=function(a){return["! "+(Blockly.c.valueToCode(a,"BOOL",Blockly.c.ORDER_LOGICAL_NOT)||"true"),Blockly.c.ORDER_LOGICAL_NOT]};
Blockly.c.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"1":"0",Blockly.c.ORDER_ATOMIC]};Blockly.c.logic_null=function(a){return["0",Blockly.c.ORDER_ATOMIC]};Blockly.c.logic_ternary=function(a){var b=Blockly.c.valueToCode(a,"IF",Blockly.c.ORDER_CONDITIONAL)||"0",c=Blockly.c.valueToCode(a,"THEN",Blockly.c.ORDER_CONDITIONAL)||"0";a=Blockly.c.valueToCode(a,"ELSE",Blockly.c.ORDER_CONDITIONAL)||"0";return[b+" ? "+c+" : "+a,Blockly.c.ORDER_CONDITIONAL]};Blockly.c.loops={};Blockly.c.controls_repeat_ext=function(a){var b=a.getField("TIMES")?String(parseInt(a.getFieldValue("TIMES"),10)):Blockly.c.valueToCode(a,"TIMES",Blockly.c.ORDER_NONE)||"0";b=Blockly.isNumber(b)?parseInt(b,10):"int("+b+")";var c=Blockly.c.statementToCode(a,"DO");c=Blockly.c.addLoopTrap(c,a.id)||Blockly.c.PASS;return"for "+Blockly.c.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE)+" in range("+b+"):\n"+c};Blockly.c.controls_repeat=Blockly.c.controls_repeat_ext;
Blockly.c.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.c.valueToCode(a,"BOOL",b?Blockly.c.ORDER_LOGICAL_NOT:Blockly.c.ORDER_NONE)||"false",d=Blockly.c.statementToCode(a,"DO");d=Blockly.c.addLoopTrap(d,a.id);b&&(c="!"+c);return"while ("+c+") {\n"+d+"}\n"};
Blockly.c.controls_for=function(a){var b=Blockly.c.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.c.valueToCode(a,"FROM",Blockly.c.ORDER_ASSIGNMENT)||"0",d=Blockly.c.valueToCode(a,"TO",Blockly.c.ORDER_ASSIGNMENT)||"0",e=Blockly.c.valueToCode(a,"BY",Blockly.c.ORDER_ASSIGNMENT)||"1",f=Blockly.c.statementToCode(a,"DO");f=Blockly.c.addLoopTrap(f,a.id);if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&Blockly.isNumber(e)){var g=parseFloat(c)<=parseFloat(d);a="for ("+b+" = "+
c+"; "+b+(g?" <= ":" >= ")+d+"; "+b;b=Math.abs(parseFloat(e));a=(1==b?a+(g?"++":"--"):a+((g?" += ":" -= ")+b))+(") {\n"+f+"}\n")}else a="",g=c,c.match(/^\w+$/)||Blockly.isNumber(c)||(g=Blockly.c.variableDB_.getDistinctName(b+"_start",Blockly.Variables.NAME_TYPE),a+="var "+g+" = "+c+";\n"),c=d,d.match(/^\w+$/)||Blockly.isNumber(d)||(c=Blockly.c.variableDB_.getDistinctName(b+"_end",Blockly.Variables.NAME_TYPE),a+="var "+c+" = "+d+";\n"),d=Blockly.c.variableDB_.getDistinctName(b+"_inc",Blockly.Variables.NAME_TYPE),
a+="var "+d+" = ",a=Blockly.isNumber(e)?a+(Math.abs(e)+";\n"):a+("Math.abs("+e+");\n"),a=a+("if ("+g+" > "+c+") {\n")+(Blockly.c.INDENT+d+" = -"+d+";\n"),a+="}\n",a+="for ("+b+" = "+g+"; "+d+" >= 0 ? "+b+" <= "+c+" : "+b+" >= "+c+"; "+b+" += "+d+") {\n"+f+"}\n";return a};Blockly.c.controls_forEach=function(a){return"// CAUTION C does not have a direct foreach equivalent.\n//https://stackoverflow.com/questions/400951/does-c-have-a-foreach-loop-construct\nBLOCKLY_ERROR_unsupported[-1];\n"};
Blockly.c.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break;\n";case "CONTINUE":return"continue;\n"}throw"Unknown flow statement.";};Blockly.c.math={};Blockly.c.addReservedWords("math,random,Number");Blockly.c.math_number=function(a){a=parseFloat(a.getFieldValue("NUM"));if(Infinity==a){a='float("inf")';var b=Blockly.c.ORDER_FUNCTION_CALL}else-Infinity==a?(a='-float("inf")',b=Blockly.c.ORDER_UNARY_SIGN):b=0>a?Blockly.c.ORDER_UNARY_SIGN:Blockly.c.ORDER_ATOMIC;return[a,b]};
Blockly.c.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.c.ORDER_ADDITIVE],MINUS:[" - ",Blockly.c.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.c.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.c.ORDER_MULTIPLICATIVE],POWER:[" ** ",Blockly.c.ORDER_EXPONENTIATION]}[a.getFieldValue("OP")],c=b[0];b=b[1];var d=Blockly.c.valueToCode(a,"A",b)||"0";a=Blockly.c.valueToCode(a,"B",b)||"0";return[d+c+a,b]};
Blockly.c.math_single=function(a){var b=a.getFieldValue("OP");if("NEG"==b){var c=Blockly.c.valueToCode(a,"NUM",Blockly.c.ORDER_UNARY_SIGN)||"0";return["-"+c,Blockly.c.ORDER_UNARY_SIGN]}Blockly.c.definitions_.import_math="import math";a="SIN"==b||"COS"==b||"TAN"==b?Blockly.c.valueToCode(a,"NUM",Blockly.c.ORDER_MULTIPLICATIVE)||"0":Blockly.c.valueToCode(a,"NUM",Blockly.c.ORDER_NONE)||"0";switch(b){case "ABS":c="math.fabs("+a+")";break;case "ROOT":c="math.sqrt("+a+")";break;case "LN":c="math.log("+a+
")";break;case "LOG10":c="math.log10("+a+")";break;case "EXP":c="math.exp("+a+")";break;case "POW10":c="math.pow(10,"+a+")";break;case "ROUND":c="round("+a+")";break;case "ROUNDUP":c="math.ceil("+a+")";break;case "ROUNDDOWN":c="math.floor("+a+")";break;case "SIN":c="math.sin("+a+" / 180.0 * math.pi)";break;case "COS":c="math.cos("+a+" / 180.0 * math.pi)";break;case "TAN":c="math.tan("+a+" / 180.0 * math.pi)"}if(c)return[c,Blockly.c.ORDER_FUNCTION_CALL];switch(b){case "ASIN":c="math.asin("+a+") / math.pi * 180";
break;case "ACOS":c="math.acos("+a+") / math.pi * 180";break;case "ATAN":c="math.atan("+a+") / math.pi * 180";break;default:throw"Unknown math operator: "+b;}return[c,Blockly.c.ORDER_MULTIPLICATIVE]};
Blockly.c.math_constant=function(a){var b={PI:["math.pi",Blockly.c.ORDER_MEMBER],E:["math.e",Blockly.c.ORDER_MEMBER],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",Blockly.c.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",Blockly.c.ORDER_MEMBER],SQRT1_2:["math.sqrt(1.0 / 2)",Blockly.c.ORDER_MEMBER],INFINITY:["float('inf')",Blockly.c.ORDER_ATOMIC]};a=a.getFieldValue("CONSTANT");"INFINITY"!=a&&(Blockly.c.definitions_.import_math="import math");return b[a]};
Blockly.c.math_number_property=function(a){var b=Blockly.c.valueToCode(a,"NUMBER_TO_CHECK",Blockly.c.ORDER_MULTIPLICATIVE)||"0",c=a.getFieldValue("PROPERTY");if("PRIME"==c)return Blockly.c.definitions_.import_math="import math",Blockly.c.definitions_.from_numbers_import_Number="from numbers import Number",[Blockly.c.provideFunction_("math_isPrime",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(n):","  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods","  # If n is not a number but a string, try parsing it.",
"  if not isinstance(n, Number):","    try:","      n = float(n)","    except:","      return False","  if n == 2 or n == 3:","    return True","  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.","  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:","    return False","  # Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x in range(6, int(math.sqrt(n)) + 2, 6):","    if n % (x - 1) == 0 or n % (x + 1) == 0:","      return False","  return True"])+"("+
b+")",Blockly.c.ORDER_FUNCTION_CALL];switch(c){case "EVEN":var d=b+" % 2 == 0";break;case "ODD":d=b+" % 2 == 1";break;case "WHOLE":d=b+" % 1 == 0";break;case "POSITIVE":d=b+" > 0";break;case "NEGATIVE":d=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.c.valueToCode(a,"DIVISOR",Blockly.c.ORDER_MULTIPLICATIVE);if(!a||"0"==a)return["False",Blockly.c.ORDER_ATOMIC];d=b+" % "+a+" == 0"}return[d,Blockly.c.ORDER_RELATIONAL]};
Blockly.c.math_change=function(a){Blockly.c.definitions_.from_numbers_import_Number="from numbers import Number";var b=Blockly.c.valueToCode(a,"DELTA",Blockly.c.ORDER_ADDITIVE)||"0";a=Blockly.c.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return a+" = ("+a+" if isinstance("+a+", Number) else 0) + "+b+"\n"};Blockly.c.math_round=Blockly.c.math_single;Blockly.c.math_trig=Blockly.c.math_single;
Blockly.c.math_on_list=function(a){var b=a.getFieldValue("OP");a=Blockly.c.valueToCode(a,"LIST",Blockly.c.ORDER_NONE)||"[]";switch(b){case "SUM":b="sum("+a+")";break;case "MIN":b="min("+a+")";break;case "MAX":b="max("+a+")";break;case "AVERAGE":Blockly.c.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.c.provideFunction_("math_mean",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = [e for e in myList if isinstance(e, Number)]","  if not localList: return",
"  return float(sum(localList)) / len(localList)"]);b=b+"("+a+")";break;case "MEDIAN":Blockly.c.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.c.provideFunction_("math_median",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = sorted([e for e in myList if isinstance(e, Number)])","  if not localList: return","  if len(localList) % 2 == 0:","    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0","  else:","    return localList[(len(localList) - 1) // 2]"]);
b=b+"("+a+")";break;case "MODE":b=Blockly.c.provideFunction_("math_modes",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(some_list):","  modes = []","  # Using a lists of [item, count] to keep count rather than dict",'  # to avoid "unhashable" errors when the counted item is itself a list or dict.',"  counts = []","  maxCount = 1","  for item in some_list:","    found = False","    for count in counts:","      if count[0] == item:","        count[1] += 1","        maxCount = max(maxCount, count[1])",
"        found = True","    if not found:","      counts.append([item, 1])","  for counted_item, item_count in counts:","    if item_count == maxCount:","      modes.append(counted_item)","  return modes"]);b=b+"("+a+")";break;case "STD_DEV":Blockly.c.definitions_.import_math="import math";b=Blockly.c.provideFunction_("math_standard_deviation",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(numbers):","  n = len(numbers)","  if n == 0: return","  mean = float(sum(numbers)) / n","  variance = sum((x - mean) ** 2 for x in numbers) / n",
"  return math.sqrt(variance)"]);b=b+"("+a+")";break;case "RANDOM":Blockly.c.definitions_.import_random="import random";b="random.choice("+a+")";break;default:throw"Unknown operator: "+b;}return[b,Blockly.c.ORDER_FUNCTION_CALL]};Blockly.c.math_modulo=function(a){var b=Blockly.c.valueToCode(a,"DIVIDEND",Blockly.c.ORDER_MULTIPLICATIVE)||"0";a=Blockly.c.valueToCode(a,"DIVISOR",Blockly.c.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.c.ORDER_MULTIPLICATIVE]};
Blockly.c.math_constrain=function(a){var b=Blockly.c.valueToCode(a,"VALUE",Blockly.c.ORDER_NONE)||"0",c=Blockly.c.valueToCode(a,"LOW",Blockly.c.ORDER_NONE)||"0";a=Blockly.c.valueToCode(a,"HIGH",Blockly.c.ORDER_NONE)||"float('inf')";return["min(max("+b+", "+c+"), "+a+")",Blockly.c.ORDER_FUNCTION_CALL]};
Blockly.c.math_random_int=function(a){Blockly.c.definitions_.import_random="import random";var b=Blockly.c.valueToCode(a,"FROM",Blockly.c.ORDER_NONE)||"0";a=Blockly.c.valueToCode(a,"TO",Blockly.c.ORDER_NONE)||"0";return["random.randint("+b+", "+a+")",Blockly.c.ORDER_FUNCTION_CALL]};Blockly.c.math_random_float=function(a){Blockly.c.definitions_.import_random="import random";return["random.random()",Blockly.c.ORDER_FUNCTION_CALL]};Blockly.c.procedures={};
Blockly.c.procedures_defreturn=function(a){for(var b=[],c,d=a.workspace,e=Blockly.Variables.allUsedVarModels(d)||[],f=0;c=e[f];f++)c=c.name,-1==a.arguments_.indexOf(c)&&b.push(Blockly.c.variableDB_.getName(c,Blockly.Variables.NAME_TYPE));d=Blockly.Variables.allDeveloperVariables(d);for(f=0;f<d.length;f++)b.push(Blockly.c.variableDB_.getName(d[f],Blockly.Names.DEVELOPER_VARIABLE_TYPE));b=b.length?Blockly.c.INDENT+"global "+b.join(", ")+"\n":"";d=Blockly.c.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE);
e=Blockly.c.statementToCode(a,"STACK");Blockly.c.STATEMENT_PREFIX&&(f=a.id.replace(/\$/g,"$$$$"),e=Blockly.c.prefixLines(Blockly.c.STATEMENT_PREFIX.replace(/%1/g,"'"+f+"'"),Blockly.c.INDENT)+e);Blockly.c.INFINITE_LOOP_TRAP&&(e=Blockly.c.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+a.id+'"')+e);(c=Blockly.c.valueToCode(a,"RETURN",Blockly.c.ORDER_NONE)||"")?c=Blockly.c.INDENT+"return "+c+"\n":e||(e=Blockly.c.PASS);var g=[];for(f=0;f<a.arguments_.length;f++)g[f]=Blockly.c.variableDB_.getName(a.arguments_[f],
Blockly.Variables.NAME_TYPE);b="def "+d+"("+g.join(", ")+"):\n"+b+e+c;b=Blockly.c.scrub_(a,b);Blockly.c.definitions_["%"+d]=b;return null};Blockly.c.procedures_defnoreturn=Blockly.c.procedures_defreturn;Blockly.c.procedures_callreturn=function(a){for(var b=Blockly.c.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.c.valueToCode(a,"ARG"+d,Blockly.c.ORDER_NONE)||"None";return[b+"("+c.join(", ")+")",Blockly.c.ORDER_FUNCTION_CALL]};
Blockly.c.procedures_callnoreturn=function(a){for(var b=Blockly.c.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.c.valueToCode(a,"ARG"+d,Blockly.c.ORDER_NONE)||"None";return b+"("+c.join(", ")+")\n"};
Blockly.c.procedures_ifreturn=function(a){var b="if "+(Blockly.c.valueToCode(a,"CONDITION",Blockly.c.ORDER_NONE)||"False")+":\n";a.hasReturnValue_?(a=Blockly.c.valueToCode(a,"VALUE",Blockly.c.ORDER_NONE)||"None",b+=Blockly.c.INDENT+"return "+a+"\n"):b+=Blockly.c.INDENT+"return\n";return b};Blockly.c.texts={};Blockly.c.text=function(a){return[Blockly.c.quote_(a.getFieldValue("TEXT")),Blockly.c.ORDER_ATOMIC]};
Blockly.c.text_join=function(a){switch(a.itemCount_){case 0:return["''",Blockly.c.ORDER_ATOMIC];case 1:return["str("+(Blockly.c.valueToCode(a,"ADD0",Blockly.c.ORDER_NONE)||"''")+")",Blockly.c.ORDER_FUNCTION_CALL];case 2:var b=Blockly.c.valueToCode(a,"ADD0",Blockly.c.ORDER_NONE)||"''";a=Blockly.c.valueToCode(a,"ADD1",Blockly.c.ORDER_NONE)||"''";return["str("+b+") + str("+a+")",Blockly.c.ORDER_ADDITIVE];default:b=[];for(var c=0;c<a.itemCount_;c++)b[c]=Blockly.c.valueToCode(a,"ADD"+c,Blockly.c.ORDER_NONE)||
"''";a=Blockly.c.variableDB_.getDistinctName("x",Blockly.Variables.NAME_TYPE);a="''.join([str("+a+") for "+a+" in ["+b.join(", ")+"]])";return[a,Blockly.c.ORDER_FUNCTION_CALL]}};Blockly.c.text_append=function(a){var b=Blockly.c.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.c.valueToCode(a,"TEXT",Blockly.c.ORDER_NONE)||"''";return b+" = str("+b+") + str("+a+")\n"};
Blockly.c.text_length=function(a){return["len("+(Blockly.c.valueToCode(a,"VALUE",Blockly.c.ORDER_NONE)||"''")+")",Blockly.c.ORDER_FUNCTION_CALL]};Blockly.c.text_isEmpty=function(a){return["not len("+(Blockly.c.valueToCode(a,"VALUE",Blockly.c.ORDER_NONE)||"''")+")",Blockly.c.ORDER_LOGICAL_NOT]};
Blockly.c.text_indexOf=function(a){var b="FIRST"==a.getFieldValue("END")?"find":"rfind",c=Blockly.c.valueToCode(a,"FIND",Blockly.c.ORDER_NONE)||"''";b=(Blockly.c.valueToCode(a,"VALUE",Blockly.c.ORDER_MEMBER)||"''")+"."+b+"("+c+")";return a.workspace.options.oneBasedIndex?[b+" + 1",Blockly.c.ORDER_ADDITIVE]:[b,Blockly.c.ORDER_FUNCTION_CALL]};
Blockly.c.text_charAt=function(a){var b=a.getFieldValue("WHERE")||"FROM_START",c=Blockly.c.valueToCode(a,"VALUE",Blockly.c.ORDER_MEMBER)||"''";switch(b){case "FIRST":return[c+"[0]",Blockly.c.ORDER_MEMBER];case "LAST":return[c+"[-1]",Blockly.c.ORDER_MEMBER];case "FROM_START":return a=Blockly.c.getAdjustedInt(a,"AT"),[c+"["+a+"]",Blockly.c.ORDER_MEMBER];case "FROM_END":return a=Blockly.c.getAdjustedInt(a,"AT",1,!0),[c+"["+a+"]",Blockly.c.ORDER_MEMBER];case "RANDOM":return Blockly.c.definitions_.import_random=
"import random",[Blockly.c.provideFunction_("text_random_letter",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(text):","  x = int(random.random() * len(text))","  return text[x];"])+"("+c+")",Blockly.c.ORDER_FUNCTION_CALL]}throw"Unhandled option (text_charAt).";};
Blockly.c.text_getSubstring=function(a){var b=a.getFieldValue("WHERE1"),c=a.getFieldValue("WHERE2"),d=Blockly.c.valueToCode(a,"STRING",Blockly.c.ORDER_MEMBER)||"''";switch(b){case "FROM_START":b=Blockly.c.getAdjustedInt(a,"AT1");"0"==b&&(b="");break;case "FROM_END":b=Blockly.c.getAdjustedInt(a,"AT1",1,!0);break;case "FIRST":b="";break;default:throw"Unhandled option (text_getSubstring)";}switch(c){case "FROM_START":a=Blockly.c.getAdjustedInt(a,"AT2",1);break;case "FROM_END":a=Blockly.c.getAdjustedInt(a,
"AT2",0,!0);Blockly.isNumber(String(a))?"0"==a&&(a=""):(Blockly.c.definitions_.import_sys="import sys",a+=" or sys.maxsize");break;case "LAST":a="";break;default:throw"Unhandled option (text_getSubstring)";}return[d+"["+b+" : "+a+"]",Blockly.c.ORDER_MEMBER]};Blockly.c.text_changeCase=function(a){var b={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"}[a.getFieldValue("CASE")];return[(Blockly.c.valueToCode(a,"TEXT",Blockly.c.ORDER_MEMBER)||"''")+b,Blockly.c.ORDER_FUNCTION_CALL]};
Blockly.c.text_trim=function(a){var b={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"}[a.getFieldValue("MODE")];return[(Blockly.c.valueToCode(a,"TEXT",Blockly.c.ORDER_MEMBER)||"''")+b,Blockly.c.ORDER_FUNCTION_CALL]};Blockly.c.text_print=function(a){return"print("+(Blockly.c.valueToCode(a,"TEXT",Blockly.c.ORDER_NONE)||"''")+")\n"};
Blockly.c.text_prompt_ext=function(a){var b=Blockly.c.provideFunction_("text_prompt",["def "+Blockly.c.FUNCTION_NAME_PLACEHOLDER_+"(msg):","  try:","    return raw_input(msg)","  except NameError:","    return input(msg)"]),c=a.getField("TEXT")?Blockly.c.quote_(a.getFieldValue("TEXT")):Blockly.c.valueToCode(a,"TEXT",Blockly.c.ORDER_NONE)||"''";b=b+"("+c+")";"NUMBER"==a.getFieldValue("TYPE")&&(b="float("+b+")");return[b,Blockly.c.ORDER_FUNCTION_CALL]};Blockly.c.text_prompt=Blockly.c.text_prompt_ext;
Blockly.c.text_count=function(a){var b=Blockly.c.valueToCode(a,"TEXT",Blockly.c.ORDER_MEMBER)||"''";a=Blockly.c.valueToCode(a,"SUB",Blockly.c.ORDER_NONE)||"''";return[b+".count("+a+")",Blockly.c.ORDER_MEMBER]};Blockly.c.text_replace=function(a){var b=Blockly.c.valueToCode(a,"TEXT",Blockly.c.ORDER_MEMBER)||"''",c=Blockly.c.valueToCode(a,"FROM",Blockly.c.ORDER_NONE)||"''";a=Blockly.c.valueToCode(a,"TO",Blockly.c.ORDER_NONE)||"''";return[b+".replace("+c+", "+a+")",Blockly.c.ORDER_MEMBER]};
Blockly.c.text_reverse=function(a){return[(Blockly.c.valueToCode(a,"TEXT",Blockly.c.ORDER_MEMBER)||"''")+"[::-1]",Blockly.c.ORDER_MEMBER]};Blockly.c.variables={};Blockly.c.variables_get=function(a){return[Blockly.c.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.c.ORDER_ATOMIC]};Blockly.c.variables_set=function(a){var b=Blockly.c.valueToCode(a,"VALUE",Blockly.c.ORDER_NONE)||"0";return Blockly.c.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+b+"\n"};
Blockly.c.variablesDynamic={};Blockly.c.variables_get_dynamic=Blockly.c.variables_get;Blockly.c.variables_set_dynamic=Blockly.c.variables_set;